{"ast":null,"code":"import _taggedTemplateLiteral from \"/media/nemophee/New Volume/MyWork/REACT/WithGgraphql/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n   query($id: ID)\\n   {student(id:$id)\\n   {\\n     id\\n     name\\n     age\\n     \\n   }\\n   }\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n//id->studentId\\n   query($studentId: ID)\\n   {faculty(id:$studentId)\\n   {\\n     name\\n     address\\n     students{\\n       id\\n       name\\n       age\\n        faculties{\\n          name\\n          id\\n          address\\n        }\\n     }\\n   }\\n   }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n   mutation($name:String!, $address:String!, $studentId:ID!)\\n   {\\n     addFaculty(name:$name ,address:$address, studentId:$ID)\\n    {\\n      name\\n      address\\n      id\\n    }\\n   }\\n \\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n   mutation($name:String!, $age:Int )\\n   {\\n    addStudent(name:$name,age:$age)\\n    {\\n      name\\n      age\\n      id\\n    }\\n   }\\n\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n      students{\\n          name\\n          id\\n          age\\n      }\\n  }\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    faculties{\\n      name\\n      id\\n      address\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nconst getFacultyQuery = gql(_templateObject());\nconst getStudentQuery = gql(_templateObject2());\nconst addStudentMutation = gql(_templateObject3());\nconst addFacultyMutation = gql(_templateObject4());\nconst getFacultysQuery = gql(_templateObject5());\nconst getStudentsQuery = gql(_templateObject6());\nexport { getFacultyQuery, getStudentQuery, addStudentMutation, addFacultyMutation, getFacultysQuery, getStudentsQuery };","map":{"version":3,"sources":["/media/nemophee/New Volume/MyWork/REACT/WithGgraphql/client/src/Queries/queries.js"],"names":["gql","getFacultyQuery","getStudentQuery","addStudentMutation","addFacultyMutation","getFacultysQuery","getStudentsQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAGA,MAAMC,eAAe,GAAGD,GAAH,mBAArB;AAWA,MAAME,eAAe,GAAGF,GAAH,oBAArB;AAWA,MAAMG,kBAAkB,GAAGH,GAAH,oBAAxB;AAaA,MAAMI,kBAAkB,GAAGJ,GAAH,oBAAxB;AAYA,MAAMK,gBAAgB,GAAGL,GAAH,oBAAtB;AAqBA,MAAMM,gBAAgB,GAAGN,GAAH,oBAAtB;AAYA,SAAQC,eAAR,EAAwBC,eAAxB,EAAwCC,kBAAxC,EAA2DC,kBAA3D,EAA8EC,gBAA9E,EAAgGC,gBAAhG","sourcesContent":["import { gql } from 'apollo-boost';\n\n\nconst getFacultyQuery = gql`\n  {\n    faculties{\n      name\n      id\n      address\n    }\n  }\n`\n \n\nconst getStudentQuery = gql`\n  {\n      students{\n          name\n          id\n          age\n      }\n  }\n\n`\n\nconst addStudentMutation = gql`\n   mutation($name:String!, $age:Int )\n   {\n    addStudent(name:$name,age:$age)\n    {\n      name\n      age\n      id\n    }\n   }\n\n`\n\nconst addFacultyMutation = gql`\n   mutation($name:String!, $address:String!, $studentId:ID!)\n   {\n     addFaculty(name:$name ,address:$address, studentId:$ID)\n    {\n      name\n      address\n      id\n    }\n   }\n \n`\nconst getFacultysQuery = gql`\n//id->studentId\n   query($studentId: ID)\n   {faculty(id:$studentId)\n   {\n     name\n     address\n     students{\n       id\n       name\n       age\n        faculties{\n          name\n          id\n          address\n        }\n     }\n   }\n   }\n`\n\nconst getStudentsQuery = gql`\n   query($id: ID)\n   {student(id:$id)\n   {\n     id\n     name\n     age\n     \n   }\n   }\n`\n\nexport {getFacultyQuery,getStudentQuery,addStudentMutation,addFacultyMutation,getFacultysQuery ,getStudentsQuery};"]},"metadata":{},"sourceType":"module"}